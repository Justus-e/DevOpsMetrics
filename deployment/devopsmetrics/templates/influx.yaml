apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: influx
  name: influx-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.influxdb.storage }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influx-deployment
  labels:
    app: influx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influx
  template:
    metadata:
      labels:
        app: influx
    spec:
      volumes:
        - name: influx-storage
          persistentVolumeClaim:
            claimName: influx-pvc
      containers:
        - name: influx
          image: {{ .Values.influxdb.image }}:{{ .Values.influxdb.tag }}
          ports:
            - containerPort: 8086
          volumeMounts:
            - mountPath: /var/lib/influx
              name: influx-storage
          env:
            - name: DOCKER_INFLUXDB_INIT_MODE
              value: setup
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: influx-secret
                  key: influx-user
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influx-secret
                  key: influx-password
            - name: DOCKER_INFLUXDB_INIT_ORG
              valueFrom:
                secretKeyRef:
                  name: influx-secret
                  key: influx-org
            - name: DOCKER_INFLUXDB_INIT_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: influx-config
                  key: influx-bucket
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: influx-secret
                  key: influx-token
---
apiVersion: v1
kind: Service
metadata:
  name: influx-service
spec:
  selector:
    app: influx
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
